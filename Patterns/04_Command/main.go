package main

/*
	Реализовать паттерн «команда».
Объяснить применимость паттерна, его плюсы и минусы, а также реальные примеры использования данного примера на практике.
	https://en.wikipedia.org/wiki/Command_pattern
*/

/*
Команда - паттерн поведения объектов.
Он инкапсулирует запрос как объект, позволяя тем самым задавать параметры клиентов
для обработки соответствующих запросов, ставить запросы в очередь или протоколировать их,
а также поддерживать отмену операций.

Применимость паттерна:
- когда необходимо параметризовать объекты выполняемым действием;
- когда необходимо определять, ставить в очередь и выполнять запросы в разное время;
- когда необходимо поддержать отмену операций;
- когда необходимо поддержать протоколирование изменений,
чтобы их можно было выполнить повторно после аварийной остановки системы;
- когда необходимо структурировать систему на основе высокоуровневых операций, построенных из примитивных

Плюсы:
- позволяет добиться высокой гибкости при проектировании пользовательского интерфейса.

Минусы:
- дополнительный слой абстракции
- может не подходить для выполнения простых задач

Примеры использования:
- Реализации системы управления командами в текстовом редакторе.
*/

func main() {
	//
	tv := &Tv{}

	onCommand := &OnCommand{
		device: tv,
	}

	offCommand := &OffCommand{
		device: tv,
	}

	onButton := &Button{
		command: onCommand,
	}
	onButton.press()

	offButton := &Button{
		command: offCommand,
	}
	offButton.press()
}
